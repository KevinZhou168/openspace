"""building is an int

Revision ID: a7c0c9e6dc6a
Revises: 4d01cfc5e747
Create Date: 2023-10-10 13:11:16.217337

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a7c0c9e6dc6a'
down_revision: Union[str, None] = '4d01cfc5e747'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('building', 'busyness',
               existing_type=sa.VARCHAR(),
               type_=sa.SmallInteger(),
               nullable=True,
               postgresql_using="busyness::smallint")
    op.add_column('input', sa.Column('time_created', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('input', 'busyness',
               existing_type=sa.VARCHAR(),
               type_=sa.SmallInteger(),
               nullable=True,
               postgresql_using="busyness::smallint")
    op.alter_column('room', 'busyness',
               existing_type=sa.VARCHAR(),
               type_=sa.SmallInteger(),
               nullable=True,
               postgresql_using="busyness::smallint")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('room', 'busyness',
               existing_type=sa.SmallInteger(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('input', 'busyness',
               existing_type=sa.SmallInteger(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.drop_column('input', 'time_created')
    op.alter_column('building', 'busyness',
               existing_type=sa.SmallInteger(),
               type_=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
